version: '3.10.10'
services:
  ####################
  web:
    build: .
    volumes:
      - ./:/app
    command: /bin/sh -c 'alembic upgrade head && python -m app'
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app_network
    depends_on:
      - database
  ####################
  database:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app_network
    ports:
      - "5432:5432"
  ###################
  redis:
    image: redis:latest
    restart: always
    networks:
      - app_network
  ###################
  celery:
    build: .
    working_dir: /app
    restart: always

    container_name: celery_worker
    command: celery -A app.tasks.worker worker -l info
    networks:
      - app_network
    depends_on:
      - redis
    ##################
  celery-beat:
    build: .
    restart: always
    working_dir: /app
    command: "celery -A app.tasks.worker beat -l info"
    networks:
      - app_network
    depends_on:
      - redis
      - celery
  flower:
    build: .
    restart: always
    container_name: flower
    working_dir: /app
    command: >
      bash -c "celery -A app.tasks.worker flower --port=5566 &&
      celery -A app.tasks.worker flower --address=0.0.0.0 --port=5566 &&
      celery -A app.tasks.worker flower --broker=redis://redis:6379"
    networks:
      - app_network
    ports:
      - '5566:5566'
    depends_on:
      - celery
      - redis
  ######################
volumes:
  postgres_data:
networks:
  app_network: